// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile18 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile19 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile23 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level11":
            case "level11":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . 2 2 2 . . 2 2 . . 2 2 2 . . 
. . . . . . . . . . . . . . . . 
. . . . . 2 2 . . 2 2 . . . . . 
. . . . . . . . . . . . . . . . 
. . 2 2 2 . . . . . . 2 2 2 . . 
. . . . . . . . . . . . . . . . 
2 2 . . . . . . . . . . . . 2 2 
. . . . . . . . . . . . . . . . 
. . 2 2 2 . . . . . . 2 2 2 . . 
. . . . . . . . . . . . . . . . 
. . . . . . 2 2 2 2 . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.dungeon.darkGroundCenter,sprites.dungeon.floorLight0], TileScale.Sixteen);
            case "level17":
            case "level17":return tiles.createTilemap(hex`1000100003000000000000000000000000000000010101000000000000000000000000000000010101010000000a09080706050400000000000001020202020202020202000000000000050200000000000000020000000000000402010100000000000200000000000000020000000000000002000000000000000000000101010000020000000000000000000000000000000200000000000001020000000000010102000000000001070200010101000d0d02000000000100060200000000000d0d0200000001000005020202020202020202000001000000040c0b0a0908070605040100000000000000000000000000000001010101010101010101010101010101`, img`
. . . . . . . . . . . . . . . . 
2 2 2 . . . . . . . . . . . . . 
. . 2 2 2 2 . . . . . . . . . . 
. . . . . . 2 . . 2 2 2 2 2 2 2 
. . . . . . . 2 . . . . . . . 2 
. . . . . . . 2 2 2 . . . . . 2 
. . . . . . . 2 . . . . . . . 2 
. . . . . . . . . . 2 2 2 . . 2 
. . . . . . . . . . . . . . . 2 
. . . . . . 2 2 . . . . . 2 2 2 
. . . . . 2 . 2 . 2 2 2 . . . 2 
. . . . 2 . . 2 . . . . . . . 2 
. . . 2 . . . 2 2 2 2 2 2 2 2 2 
. . 2 . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.builtin.forestTiles0,sprites.dungeon.chestOpen,sprites.builtin.crowd8,sprites.builtin.crowd7,sprites.builtin.crowd6,sprites.builtin.crowd5,sprites.builtin.crowd4,sprites.builtin.crowd3,sprites.builtin.crowd2,sprites.builtin.crowd1,sprites.builtin.crowd0,myTiles.tile5], TileScale.Sixteen);
            case "level13":
            case "level13":return tiles.createTilemap(hex`100010000c000000000000000000000000000000020202000000000000000000000000000000020202020000000a0908030706040000000000000201010101010101010100000000000008010000000000000001000000000000090102020000000000010000000000000701000000000000000100000000000000000000020202000001000000000000000000000000000000010000000000000201000d000000020201000000000002050100020202000e0e01000000000200060100000000000e0e010000000200000401010101010101010100000200000004050b0a0908030706040200000000000000000000000000000002020202020202020202020202020202`, img`
. . . . . . . . . . . . . . . . 
2 2 2 . . . . . . . . . . . . . 
. . 2 2 2 2 . . . . . . . . . . 
. . . . . . 2 . . 2 2 2 2 2 2 2 
. . . . . . . 2 . . . . . . . 2 
. . . . . . . 2 2 2 . . . . . 2 
. . . . . . . 2 . . . . . . . 2 
. . . . . . . . . . 2 2 2 . . 2 
. . . . . . . . . . . . . . . 2 
. . . . . . 2 2 . . . . . 2 2 2 
. . . . . 2 . 2 . 2 2 2 . . . 2 
. . . . 2 . . 2 . . . . . . . 2 
. . . 2 . . . 2 2 2 2 2 2 2 2 2 
. . 2 . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles0,sprites.builtin.brick,sprites.builtin.crowd5,sprites.builtin.crowd8,sprites.builtin.crowd0,sprites.builtin.crowd7,sprites.builtin.crowd6,sprites.builtin.crowd4,sprites.builtin.crowd3,sprites.builtin.crowd2,sprites.builtin.crowd1,sprites.dungeon.chestOpen,sprites.castle.tileDarkGrass2,myTiles.tile5], TileScale.Sixteen);
            case "level19":
            case "level19":return tiles.createTilemap(hex`1000100000000000000000000000000000000000010101000000000000000000000000000000010101010000000908070605040300000000000001020202020202020202000000000000050200000000000000020000000000000402010100000000000200000000000003020000000000000002000000000000000000000101010000020000000000000000000000000000000200000000000001020000000000010102000000000001060200010101000c0c02000000000100050200000000000c0c0200000001000004020202020202020202000001000000030b0a090807060504030100000000000000000000000000000001010101010101010101010101010101`, img`
. . . . . . . . . . . . . . . . 
2 2 2 . . . . . . . . . . . . . 
. . 2 2 2 2 . . . . . . . . . . 
. . . . . . 2 . . 2 2 2 2 2 2 2 
. . . . . . . 2 . . . . . . . 2 
. . . . . . . 2 2 2 . . . . . 2 
. . . . . . . 2 . . . . . . . 2 
. . . . . . . . . . 2 2 2 . . 2 
. . . . . . . . . . . . . . . 2 
. . . . . . 2 2 . . . . . 2 2 2 
. . . . . 2 . 2 . 2 2 2 . . . 2 
. . . . 2 . . 2 . . . . . . . 2 
. . . 2 . . . 2 2 2 2 2 2 2 2 2 
. . 2 . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.builtin.forestTiles0,sprites.builtin.crowd8,sprites.builtin.crowd7,sprites.builtin.crowd6,sprites.builtin.crowd5,sprites.builtin.crowd4,sprites.builtin.crowd3,sprites.builtin.crowd2,sprites.builtin.crowd1,sprites.builtin.crowd0,myTiles.tile5], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . 2 . . . . . . . . . . . 
. . . 2 . . 2 2 2 2 2 2 2 2 2 2 
. . 2 . . . . . . . . . . . . 2 
. . . . . . . . . . . . . . . . 
2 2 . . . . . . . . . . . . . . 
. . 2 2 2 . . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . 
. . . . . . 2 2 2 . . . . . . . 
. . . . . . . . 2 . 2 . . . . . 
. . . . . . . . . . . 2 2 2 . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 2 2 2 2 . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.hazardLava0,sprites.dungeon.hazardLava1,sprites.builtin.brick,myTiles.tile2,myTiles.tile1], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . 2 2 2 2 
. . . . . . . . . . . . 2 2 2 2 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 2 . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.dungeon.hazardLava0,myTiles.tile2,myTiles.tile4], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . 2 . 2 . . . . . . . . . . . 
. . . . . . 2 . 2 . . . . . . . 
. . . . . . . . . . 2 . . . . . 
2 2 2 . . . . . . . . . 2 . . . 
. . . . . . . . . 2 2 2 . . . . 
. . . . . . . . 2 . . . . . . . 
. . . . . . . 2 . . . . . . . . 
. . . . . 2 . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 . . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile2,sprites.builtin.brick,myTiles.tile3,sprites.builtin.forestTiles10], TileScale.Sixteen);
            case "level23":
            case "level23":return tiles.createTilemap(hex`10001a`, img`
................
2..222222222....
2..2.........2..
2..2........2...
2..2.......2....
2..2......2.....
2..2.....2......
2222....2.......
.......2........
......2.........
.....2..........
....2...........
...2............
................
..2.2...........
.....2..........
......2.........
.......2........
.........2......
............2...
.....2....2..2..
....2..........2
...2..........2.
.........22222..
222.............
................
`, [myTiles.transparency16,sprites.builtin.brick,myTiles.tile9,sprites.dungeon.hazardLava0,myTiles.tile2], TileScale.Sixteen);
            case "level21":
            case "level21":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
2 2 2 2 2 . . . . 2 2 2 2 . . . 
. . . . 2 . . . . 2 . . . 2 . . 
. 2 . . 2 . . . . 2 . . . . 2 . 
. . . . 2 . . . . 2 . . . . . . 
. . 2 . 2 . . . 2 2 . . . . . 2 
2 . . . 2 2 2 2 . . . . . . 2 . 
. . . . . . . . . . . . . 2 . . 
. 2 . 2 . . . . . . . . 2 . . . 
. . . 2 . . . . 2 . . 2 . . . . 
. . 2 . . . . 2 . . . . . . . . 
2 . . . 2 2 2 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 2 2 2 2 2 2 2 2 . . . . 
`, [myTiles.transparency16,sprites.builtin.brick,sprites.dungeon.hazardLava0,myTiles.tile2,sprites.dungeon.hazardLava1,myTiles.tile6], TileScale.Sixteen);
            case "level28":
            case "level28":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
2 2 2 2 2 2 2 2 2 2 2 . . . . . 
2 2 2 2 2 2 2 2 2 2 2 . 2 2 2 . 
2 2 2 2 2 2 2 2 2 2 2 . 2 2 2 . 
2 2 2 2 2 2 2 2 2 2 2 . 2 2 2 . 
2 . . . . . . . . . . . 2 2 2 . 
2 . 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . 2 . . . . . . . . . . . . . 
. . 2 . . . . . . . . . . . . . 
. . 2 . . . . . . . . . . . . . 
. . 2 . . . . . . . . . . . . . 
. . 2 . . . . . . . . . . . . . 
. . 2 . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.doorOpenSouth,myTiles.tile2], TileScale.Sixteen);
            case "level30":
            case "level30":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileGrass2,myTiles.tile5,myTiles.tile2,myTiles.tile10], TileScale.Sixteen);
            case "level33":
            case "level33":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . 2 2 . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . 2 . . . . . . 
. . . . . . . . 2 . . . . . . . 
. . . . . . . 2 . . . . . . . . 
. . . . . . 2 . . . . . . . . . 
. . . . . 2 . . . . . . . 2 . . 
. . . . 2 . . . . . 2 . . . . . 
. . . 2 2 . . . . . . . . . . . 
. . 2 . 2 . . . 2 . . . . . . . 
2 . . . 2 . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile2,sprites.dungeon.floorLight0,sprites.dungeon.hazardLava0,sprites.dungeon.hazardLava1,myTiles.tile7,myTiles.tile11], TileScale.Sixteen);
            case "level25":
            case "level25":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . 2 2 2 2 . . . . . . 
2 2 2 2 2 . . . . . . 2 2 2 2 2 
. . . . . . 2 2 2 2 . . . . . . 
. . . 2 2 2 . . . . 2 2 2 . . . 
. . . . . . . . . . . . . . . . 
2 2 2 . . . . 2 2 . . . . 2 2 2 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 . 2 2 2 2 . 2 2 2 2 2 
. . . . . . . . . . . . . . . . 
. . . . . 2 . . . . 2 . . . . . 
2 2 2 2 . . . 2 2 . . . 2 2 2 2 
. . . . . . . . . . . . . . . . 
. . . . 2 2 2 2 2 2 2 2 . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.brick,myTiles.tile1], TileScale.Sixteen);
            case "level36":
            case "level36":return tiles.createTilemap(hex``, img`
. . . . . 2 . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . 
2 2 . . . 2 . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . 
. . . . . 2 . . . . 2 2 . . . . 
. . . . . 2 . . . 2 . . . 2 . . 
. . . . . . 2 . . . . . . . 2 . 
. . . 2 . . . . 2 . 2 . . . . . 
. . . 2 2 . . . . . . . 2 . . . 
. . . 2 . 2 . . . . . . . . 2 . 
. . . 2 . . 2 . . . . . . 2 . . 
. . . 2 . . . 2 . . 2 2 2 . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile2,sprites.builtin.brick,myTiles.tile12,sprites.dungeon.hazardLava0,sprites.dungeon.hazardLava1], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . 2 2 2 2 2 2 2 2 2 
. . . . . . 2 . . . . . . . . . 
. . . . . 2 . . . . . . . . . . 
. . . . 2 . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . 2 . . . . . . . . . . . . . 
. 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
. 2 2 2 2 2 2 2 . . . . . . . . 
. . . . . . . . . 2 . . . . . . 
. . . . . . . . 2 . . . . . . . 
. . . . . . . 2 . . . . . . . 2 
. . 2 . . . 2 . . . . . . . 2 . 
. 2 . 2 2 2 . . . . 2 . . . . . 
`, [myTiles.transparency16,myTiles.tile2,sprites.builtin.brick,myTiles.tile13,myTiles.tile14,myTiles.tile15], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . . . . . . . . . . . 2 . 2 
. . . . . . . . . . . . . . . . 
. . 2 2 . . . 2 2 2 . . 2 2 . . 
. . . . . . . . . . . . . . . . 
2 2 . . 2 2 2 . . . 2 2 . . 2 2 
. . . . . . . . . . . . . . . . 
. . 2 2 . . . 2 2 2 . . 2 2 . . 
. . . . . . . . . . . . . . . . 
2 2 . . 2 2 2 . . . 2 2 . . 2 2 
. . . . . . . . . . . . . . . . 
. . 2 2 . . . 2 2 2 . . 2 2 . . 
. . . . . . . . . . . . . . . . 
2 2 . . 2 2 2 . . . 2 2 . . 2 2 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile15,sprites.builtin.brick,myTiles.tile2,myTiles.tile16,myTiles.tile23], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . 2 . . . . . . . . . . . . . 
. . 2 . . . . . . . . . . 2 . . 
. . 2 . . . . . . . . . . 2 . . 
. . 2 . . . . . . . . . . 2 . . 
. . 2 . . . . . . . . . . 2 . . 
. . 2 . . . . . . . . . . 2 . . 
. . . . . . . . . . . . . 2 . . 
. . 2 2 . . . . . . . . . 2 . . 
. . 2 . 2 . . . . . . . . 2 . . 
. . 2 . . 2 . . . . . . . 2 . . 
. . 2 . . . . . . . . . . 2 . . 
. . 2 . . . . . . . . . . 2 . . 
2 . 2 . . . . . 2 . . . . 2 . . 
. . 2 . . . . . . 2 . . . 2 . . 
. 2 2 . . . . . . . 2 2 2 2 2 . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile2,myTiles.tile13,sprites.builtin.brick,myTiles.tile18,myTiles.tile19], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . 2 . . . . . . . . . . . 
. . . 2 . . 2 2 2 2 2 2 2 2 2 2 
. . 2 . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 . . . . . . . . . . . . . . 
. . 2 2 2 . . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . 
. . . . . . 2 2 2 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . 2 2 2 . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 2 2 2 2 . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.brick,myTiles.tile1,sprites.dungeon.chestClosed,sprites.dungeon.hazardLava0,sprites.dungeon.hazardLava1,myTiles.tile2,myTiles.tile18], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010100000001010101010101010101010101000000010101010101010101010101010000000101010101010101010101010100000001010101010101010101010101000000010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101000000000000000000000000000000000001000000000000000000000000000001000101010000000000000001010101000000000000010101010100000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . 2 
. 2 2 2 . . . . . . . 2 2 2 2 . 
. . . . . 2 2 2 2 2 . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.builtin.brick], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile1":
            case "tile3":return tile3;
            case "myTile2":
            case "tile4":return tile4;
            case "myTile3":
            case "tile5":return tile5;
            case "myTile4":
            case "tile6":return tile6;
            case "myTile6":
            case "tile8":return tile8;
            case "myTile7":
            case "tile9":return tile9;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile8":
            case "tile10":return tile10;
            case "myTile5":
            case "tile7":return tile7;
            case "myTile9":
            case "tile11":return tile11;
            case "myTile10":
            case "tile12":return tile12;
            case "myTile11":
            case "tile13":return tile13;
            case "myTile12":
            case "tile14":return tile14;
            case "myTile13":
            case "tile15":return tile15;
            case "myTile14":
            case "tile16":return tile16;
            case "myTile16":
            case "tile18":return tile18;
            case "myTile17":
            case "tile19":return tile19;
            case "myTile21":
            case "tile23":return tile23;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
